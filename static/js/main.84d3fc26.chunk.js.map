{"version":3,"sources":["components/widgets/common/ChangeCountInput.js","components/CartItem.js","components/Cart.js","components/Product.js","components/Products.js","App.js","components/actions/cartActions.js","components/actions/actions-types/cart-actions.js","components/reducers/cartReducer.js","index.js"],"names":["ContentWrapper","styled","div","Button","Decrease","Increase","Input","input","ChangeCountInput","id","quantity","addQuantity","subtractQuantity","inputQuantity","onClick","type","value","TableData","td","RemoveButton","button","FlexWrapper","CartItem","item","removeItem","title","price","totalPrice","CartWrapper","Title","CartContent","Table","table","TableHeader","th","TotalAmountBlock","Cart","addedItems","total","map","key","Img","ProductWrapper","Price","AddButton","Product","product","addToCart","ProductsWrapper","ListWrapper","Products","products","connect","state","dispatch","initState","img","cartReducer","action","addedItem","find","isAlreadyAdded","newTotalPrice","itemToRemove","newAddedItems","filter","newTotal","itemToUpdate","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"+xCAIA,IAAMA,EAAgBC,IAAOC,IAAT,KAIdC,EAASF,IAAOC,IAAV,KAiBNE,EAAWH,YAAOE,EAAPF,CAAH,KAIRI,EAAWJ,YAAOE,EAAPF,CAAH,KAIRK,EAAQL,IAAOM,MAAV,KAyCIC,EAzBU,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,GAAIC,EAA6D,EAA7DA,SAAUC,EAAmD,EAAnDA,YAAaC,EAAsC,EAAtCA,iBAAsC,EAApBC,cAQrE,OACI,kBAACb,EAAD,KACI,kBAACI,EAAD,CAAUU,QAJK,kBAAMF,EAAiBH,KAItC,KACA,kBAACH,EAAD,CAAOS,KAAK,SAASC,MAAON,IAC5B,kBAACL,EAAD,CAAUS,QARK,kBAAMH,EAAYF,KAQjC,O,2kBCxDZ,IAAMQ,EAAYhB,IAAOiB,GAAV,KAaTC,EAAelB,IAAOmB,OAAV,KAUZC,EAAapB,IAAOC,IAAT,KAkCFoB,EA7BE,SAAC,GAAsE,IAArEC,EAAoE,EAApEA,KAAMC,EAA8D,EAA9DA,WAAYb,EAAkD,EAAlDA,YAAaC,EAAqC,EAArCA,iBAAkBC,EAAmB,EAAnBA,cAIhE,OACI,4BACI,kBAACI,EAAD,KAAYM,EAAKE,OACjB,kBAACR,EAAD,eAAeM,EAAKG,MAApB,SACA,kBAACT,EAAD,KACI,kBAAC,EAAD,CAAkBR,GAAIc,EAAKd,GAAIC,SAAUa,EAAKb,SAAUE,iBAAkBA,EAAkBD,YAAaA,EAAaE,cAAeA,KAEzI,kBAACI,EAAD,KACI,kBAACI,EAAD,eACQE,EAAKI,WADb,QAEI,kBAACR,EAAD,CAAcL,QAZV,kBAAMU,EAAWD,EAAKd,MAY1B,S,k7BC1CpB,IAAMmB,EAAc3B,IAAOC,IAAV,KAIX2B,EAAQ5B,IAAOC,IAAV,KAML4B,EAAc7B,IAAOC,IAAV,KAOX6B,EAAQ9B,IAAO+B,MAAV,KAMLC,EAAchC,IAAOiC,GAAV,KAaXC,EAAmBlC,IAAOC,IAAV,KAyCPkC,EAlCF,SAAC,GAAmF,IAAlFC,EAAiF,EAAjFA,WAAYC,EAAqE,EAArEA,MAAOd,EAA8D,EAA9DA,WAAYb,EAAkD,EAAlDA,YAAaC,EAAqC,EAArCA,iBAAkBC,EAAmB,EAAnBA,cAIzE,OACI,kBAACe,EAAD,KACI,kBAACC,EAAD,aACA,kBAACC,EAAD,KACI,kBAACC,EAAD,KACI,+BACI,4BACI,kBAACE,EAAD,aACA,kBAACA,EAAD,cACA,kBAACA,EAAD,iBACA,kBAACA,EAAD,qBAZMI,EAAWE,IAAI,SAAAhB,GAAI,OAAI,kBAAC,EAAD,CAAUiB,IAAKjB,EAAKd,GAAIc,KAAMA,EAAMC,WAAYA,EAAYb,YAAaA,EAAaC,iBAAkBA,EAAkBC,cAAeA,QAiBlL,kBAACsB,EAAD,6BAAoCG,EAApC,Y,+jDC/DhB,IAAMG,EAAMxC,IAAOC,IAAV,KA0BHwC,EAAiBzC,IAAOC,IAAV,IAQduC,EAOAA,EAQAA,GAQAZ,EAAQ5B,IAAOC,IAAV,KAMLyC,EAAQ1C,IAAOC,IAAV,KAML0C,EAAY3C,IAAOmB,OAAV,KA+BAyB,EApBC,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,UAChBtC,EAAoBqC,EAApBrC,GAAIgB,EAAgBqB,EAAhBrB,MAAOC,EAASoB,EAATpB,MAIlB,OACI,kBAACgB,EAAD,KACI,kBAACD,EAAD,MACA,kBAAC,EAAD,KAAQhB,GACR,kBAACkB,EAAD,eAAWjB,EAAX,SACA,kBAACkB,EAAD,CAAW9B,QAPC,kBAAMiC,EAAUtC,KAO5B,iB,uZCzFZ,IAAMuC,GAAkB/C,IAAOC,IAAV,MAIf2B,GAAQ5B,IAAOC,IAAV,KAML+C,GAAchD,IAAOC,IAAV,KA0BFgD,GAnBE,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,SAAUJ,EAAe,EAAfA,UAIzB,OACI,kBAACC,GAAD,KACI,kBAAC,GAAD,iBACA,kBAACC,GAAD,KALqBE,EAASZ,IAAI,SAAAO,GAAO,OAAI,kBAAC,EAAD,CAASN,IAAKM,EAAQrC,GAAIqC,QAASA,EAASC,UAAWA,S,6WCfhH,IAAM/C,GAAiBC,IAAOC,IAAV,MAOd0B,GAAc3B,IAAOC,IAAV,MAIX8C,GAAkB/C,IAAOC,IAAV,MA8CNkD,eA7BS,SAACC,GACrB,MAAO,CACHF,SAAUE,EAAMF,SAChBd,WAAYgB,EAAMhB,WAClBC,MAAOe,EAAMf,QAIM,SAAEgB,GACzB,MAAO,CACHP,UAAW,SAAEtC,GAAU6C,ECxCN,SAAE7C,GACvB,MAAO,CACHM,KCTmB,cDUnBN,MDqCgCsC,CAAUtC,KAC1Ce,WAAY,SAAEf,GAAU6C,EClCN,SAAC7C,GACvB,MAAO,CACHM,KCfmB,cDgBnBN,MD+BiCe,CAAWf,KAC5CE,YAAa,SAAEF,GAAU6C,EC5BN,SAAC7C,GACxB,MAAO,CACHM,KCrBoB,eDsBpBN,MDyBkCE,CAAYF,KAC9CG,iBAAkB,SAAEH,GAAU6C,ECtBN,SAAC7C,GAC7B,MAAO,CACHM,KC3ByB,oBD4BzBN,MDmBuCG,CAAiBH,KACxDI,cAAe,SAAEJ,EAAIC,GAAgB4C,EChBhB,SAAC7C,EAAIC,GAC9B,MAAO,CACHK,KCjCsB,iBDkCtBL,WACAD,MDY8CI,CAAcJ,EAAIC,OAezD0C,CA1CH,SAAC,GAAyG,IAAxGD,EAAuG,EAAvGA,SAAUd,EAA6F,EAA7FA,WAAYC,EAAiF,EAAjFA,MAAOS,EAA0E,EAA1EA,UAAWvB,EAA+D,EAA/DA,WAAYb,EAAmD,EAAnDA,YAAaC,EAAsC,EAAtCA,iBAAkBC,EAAoB,EAApBA,cAC/F,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,KACI,kBAAC,EAAD,CAAMwB,WAAYA,EAAYC,MAAOA,EAAOd,WAAYA,EAAYb,YAAaA,EAAaC,iBAAkBA,EAAkBC,cAAeA,KAErJ,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAUsC,SAAUA,EAAUJ,UAAWA,Q,0kBGxBvD,IAAMQ,GAAY,CACdJ,SAAU,CACN,CAAE1C,GAAG,EAAGgB,MAAM,eAAgBC,MAAM,GAAI8B,IAAK,MAC7C,CAAE/C,GAAG,EAAGgB,MAAM,eAAgBC,MAAM,GAAI8B,IAAK,MAC7C,CAAE/C,GAAG,EAAGgB,MAAM,eAAgBC,MAAM,GAAI8B,IAAK,OAEjDnB,WAAW,GACXC,MAAO,GAiGImB,GA9FK,WAAgC,IAA/BJ,EAA8B,uDAAtBE,GAAWG,EAAW,uCAC/C,OAAQA,EAAO3C,MACX,IDnBmB,cCoBf,IAAM4C,EAAYN,EAAMF,SAASS,KAAK,SAAArC,GAAI,OAAIA,EAAKd,KAAOiD,EAAOjD,KAC3DoD,EAAiBR,EAAMhB,WAAWuB,KAAK,SAAArC,GAAI,OAAIA,EAAKd,KAAOkD,EAAUlD,KAC3E,GAAIoD,EAAiB,CACjBF,EAAUjD,UAAY,EACtBiD,EAAUhC,YAAcgC,EAAUjC,MAClC,IAAMoC,EAAgBT,EAAMf,MAAQqB,EAAUjC,MAC9C,OAAO,GAAP,GACO2B,EADP,CAEIf,MAAOwB,IAGXH,EAAUjD,SAAW,EACrBiD,EAAUhC,WAAagC,EAAUjC,MACjC,IAAMoC,EAAgBT,EAAMf,MAAQqB,EAAUjC,MAC9C,OAAO,GAAP,GACO2B,EADP,CAEIhB,WAAW,GAAD,oBAAMgB,EAAMhB,YAAZ,CAAwBsB,IAClCrB,MAAOwB,IAKnB,IDzCmB,cC0Cf,IAAMC,EAAeV,EAAMhB,WAAWuB,KAAK,SAAArC,GAAI,OAAIA,EAAKd,KAAOiD,EAAOjD,KAChEuD,EAAgBX,EAAMhB,WAAW4B,OAAO,SAAA1C,GAAI,OAAIA,EAAKd,KAAOiD,EAAOjD,KACnEyD,EAAWb,EAAMf,MAAUyB,EAAarC,MAAQqC,EAAarD,SACnE,OAAO,GAAP,GACO2C,EADP,CAEKhB,WAAY2B,EACZ1B,MAAO4B,IAIhB,IDnDoB,eCoDhB,IAAMC,EAAed,EAAMhB,WAAWuB,KAAK,SAAArC,GAAI,OAAIA,EAAKd,KAAOiD,EAAOjD,KACtE0D,EAAazD,UAAY,EACzByD,EAAaxC,YAAcwC,EAAazC,MACxC,IAAMwC,EAAWb,EAAMf,MAAQ6B,EAAazC,MAC5C,OAAO,GAAP,GACO2B,EADP,CAEIf,MAAO4B,IAIf,ID5DsB,iBC6DlB,IAAMC,EAAed,EAAMhB,WAAWuB,KAAK,SAAArC,GAAI,OAAIA,EAAKd,KAAOiD,EAAOjD,KACtE,GAAIiD,EAAOhD,UAAY,EAAG,CACtB,IAAMsD,EAAgBX,EAAMhB,WAAW4B,OAAO,SAAA1C,GAAI,OAAIA,EAAKd,KAAOiD,EAAOjD,KACnEyD,EAAWb,EAAMf,MAAQ6B,EAAaxC,WAC5C,OAAO,GAAP,GACO0B,EADP,CAEIhB,WAAY2B,EACZ1B,MAAO4B,IAGX,IAAIA,EAAWb,EAAMf,MAAQ6B,EAAaxC,WAI1C,OAHAwC,EAAazD,SAAWgD,EAAOhD,SAC/ByD,EAAaxC,WAAawC,EAAazD,SAAWyD,EAAazC,MAExD,GAAP,GACO2B,EADP,CAEIf,MAHJ4B,GAAYC,EAAaxC,aAQjC,IDnFyB,oBCoFrB,IAAMwC,EAAed,EAAMhB,WAAWuB,KAAK,SAAArC,GAAI,OAAIA,EAAKd,KAAOiD,EAAOjD,KACtE0D,EAAazD,UAAY,EACzByD,EAAaxC,YAAcwC,EAAazC,MACxC,IAAMwC,EAAWb,EAAMf,MAAQ6B,EAAazC,MAC5C,GAA8B,IAA1ByC,EAAazD,SAAgB,CAC7B,IAAMsD,EAAgBX,EAAMhB,WAAW4B,OAAO,SAAA1C,GAAI,OAAIA,EAAKd,KAAOiD,EAAOjD,KACzE,OAAO,GAAP,GACO4C,EADP,CAEIhB,WAAY2B,EACZ1B,MAAO4B,IAGX,OAAO,GAAP,GACOb,EADP,CAEIf,MAAO4B,IAKnB,QACI,OAAOb,I,QCnGbe,GAAQC,aAAYZ,IAE1Ba,IAASC,OACL,kBAAC,IAAD,CAAUH,MAAOA,IACb,kBAAC,GAAD,OAENI,SAASC,eAAe,W","file":"static/js/main.84d3fc26.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContentWrapper= styled.div`\r\n  min-width: 95px;\r\n`;\r\n\r\nconst Button = styled.div`\r\n  display: inline-block;\r\n  border: 1px solid #ddd;\r\n  margin: 0px;\r\n  width: 25px;\r\n  height: 21px;\r\n  text-align: center;\r\n  background: #eee;\r\n  -webkit-touch-callout: none;\r\n  -webkit-user-select: none;\r\n  -khtml-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Decrease = styled(Button)`\r\n  border-radius: 15px 0 0 15px;\r\n`;\r\n\r\nconst Increase = styled(Button)`\r\n  border-radius: 0 15px 15px 0;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  text-align: center;\r\n  border: none;\r\n  border-top: 1px solid #ddd;\r\n  border-bottom: 1px solid #ddd;\r\n  margin: 0px;\r\n  width: 20px;\r\n  height: 19px;\r\n  outline: none;\r\n  \r\n  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst ChangeCountInput = ({ id, quantity, addQuantity, subtractQuantity, inputQuantity }) => {\r\n    // experimental stuff, just add to onClick action to test it out\r\n    // const handleChange = event => inputQuantity(id, event.target.value);\r\n\r\n    const handleIncrease = () => addQuantity(id);\r\n\r\n    const handleDecrease = () => subtractQuantity(id);\r\n\r\n    return (\r\n        <ContentWrapper>\r\n            <Decrease onClick={handleDecrease}>-</Decrease>\r\n            <Input type=\"number\" value={quantity} />\r\n            <Increase onClick={handleIncrease}>+</Increase>\r\n        </ContentWrapper>\r\n    )\r\n};\r\n\r\nChangeCountInput.propTypes = {\r\n    id: PropTypes.number,\r\n    quantity: PropTypes.number,\r\n    addQuantity: PropTypes.func,\r\n    subtractQuantity: PropTypes.func,\r\n    inputQuantity: PropTypes.func,\r\n};\r\n\r\nexport default ChangeCountInput;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ChangeCountInput from './widgets/common/ChangeCountInput';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TableData = styled.td`\r\n  font-size: 14px;\r\n  font-weight: 300;\r\n  width: 20%;\r\n  padding: 10px;\r\n  text-align: start;\r\n  border-bottom: 1px solid black;\r\n  \r\n  :first-child {\r\n    width: 40%\r\n  }\r\n`;\r\n\r\nconst RemoveButton = styled.button`\r\n  font-size: 16px;\r\n  text-align: center;\r\n  background-color: grey;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst FlexWrapper= styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst CartItem = ({item, removeItem, addQuantity, subtractQuantity, inputQuantity}) => {\r\n\r\n    const handleClick = () => removeItem(item.id);\r\n\r\n    return (\r\n        <tr>\r\n            <TableData>{item.title}</TableData>\r\n            <TableData>{`${item.price} USD`}</TableData>\r\n            <TableData>\r\n                <ChangeCountInput id={item.id} quantity={item.quantity} subtractQuantity={subtractQuantity} addQuantity={addQuantity} inputQuantity={inputQuantity} />\r\n            </TableData>\r\n            <TableData>\r\n                <FlexWrapper>\r\n                    {`${item.totalPrice} USD`}\r\n                    <RemoveButton onClick={handleClick}>-</RemoveButton>\r\n                </FlexWrapper>\r\n            </TableData>\r\n        </tr>\r\n    )\r\n};\r\n\r\nCartItem.propTypes = {\r\n    item: PropTypes.object,\r\n    removeItem: PropTypes.func,\r\n    addQuantity: PropTypes.func,\r\n    subtractQuantity: PropTypes.func,\r\n    inputQuantity: PropTypes.func,\r\n};\r\n\r\nexport default CartItem;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CartItem from \"./CartItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CartWrapper = styled.div`\r\n  padding: 0 5px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst CartContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px 20px 40px 20px;\r\n  border: 1px solid black;\r\n`;\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst TableHeader = styled.th`\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  width: 20%;\r\n  padding: 10px;\r\n  text-align: start;\r\n  border-bottom: 1px solid black;\r\n  \r\n  :first-child {\r\n    width: 40%\r\n  }\r\n`;\r\n\r\nconst TotalAmountBlock = styled.div`\r\n  align-self: flex-end;\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  padding: 0 20px;\r\n`;\r\n\r\nconst Cart = ({addedItems, total, removeItem, addQuantity, subtractQuantity, inputQuantity}) => {\r\n\r\n    const renderCartItems = () => addedItems.map(item => <CartItem key={item.id} item={item} removeItem={removeItem} addQuantity={addQuantity} subtractQuantity={subtractQuantity} inputQuantity={inputQuantity} />);\r\n\r\n    return (\r\n        <CartWrapper>\r\n            <Title>Cart</Title>\r\n            <CartContent>\r\n                <Table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <TableHeader>Item</TableHeader>\r\n                            <TableHeader>Price</TableHeader>\r\n                            <TableHeader>Quantity</TableHeader>\r\n                            <TableHeader>Total price</TableHeader>\r\n                        </tr>\r\n                        {renderCartItems()}\r\n                    </tbody>\r\n                </Table>\r\n                <TotalAmountBlock>{`Total Amount: ${total} USD`}</TotalAmountBlock>\r\n            </CartContent>\r\n        </CartWrapper>\r\n    )\r\n};\r\n\r\nCart.propTypes = {\r\n    addedItems: PropTypes.array,\r\n    total: PropTypes.number,\r\n    removeItem: PropTypes.func,\r\n    addQuantity: PropTypes.func,\r\n    subtractQuantity: PropTypes.func,\r\n    inputQuantity: PropTypes.func,\r\n};\r\n\r\nexport default Cart;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Img = styled.div`\r\n  position: relative;\r\n  height: 100px;\r\n  overflow: hidden;\r\n  border: 1px solid black;\r\n  margin-bottom: 10px;\r\n  \r\n   &::before, &::after {\r\n    content: '';\r\n    position: absolute;\r\n    height: 2px;\r\n    width: 100%;\r\n    top: 50%;\r\n    left: 0;\r\n    background: #000;\r\n  }\r\n  \r\n  &::before {\r\n    transform: rotate(26deg);\r\n  }\r\n  \r\n  &::after {\r\n    transform: rotate(-26deg);\r\n  }\r\n`;\r\n\r\nconst ProductWrapper = styled.div`\r\n  padding: 10px 5px;\r\n  border: 1px solid black;\r\n  border-top: 2px solid black;\r\n  \r\n  :nth-child(3n + 1) {\r\n    border-right: 2px solid black;\r\n    \r\n    ${Img} {\r\n      border-right: 2px solid black;\r\n      border-bottom: 2px solid black;\r\n    }\r\n  }\r\n  \r\n  :nth-child(3n + 2) {\r\n    ${Img} {\r\n      border-bottom: 2px solid black;\r\n    }\r\n  }\r\n  \r\n  :nth-child(3n) {\r\n    border-left: 2px solid black;\r\n    \r\n    ${Img} {\r\n      border-right: 2px solid black;\r\n      border-bottom: 2px solid black;\r\n      border-left: 2px solid black;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 14px;\r\n  font-weight: 300;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Price = styled.div`\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst AddButton = styled.button`\r\n  width: 100%;\r\n  font-size: 12px;\r\n  padding: 7px 0;\r\n  font-weight: 700;\r\n  background-color: #cccccc;\r\n  border-radius: 10px;\r\n  border: 1px solid #a8a8a8;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Product = ({product, addToCart}) => {\r\n    const {id, title, price} = product;\r\n\r\n    const handleClick = () => addToCart(id);\r\n\r\n    return (\r\n        <ProductWrapper>\r\n            <Img />\r\n            <Title>{title}</Title>\r\n            <Price>{`${price} USD`}</Price>\r\n            <AddButton onClick={handleClick}>Add to Cart</AddButton>\r\n        </ProductWrapper>\r\n    )\r\n};\r\n\r\nProduct.propTypes = {\r\n    product: PropTypes.object,\r\n    addToCart: PropTypes.func,\r\n};\r\n\r\nexport default Product;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Product from './Product';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ProductsWrapper = styled.div`\r\n  padding: 0 5px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst ListWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-column-gap: 10%;\r\n  grid-row-gap: 10px;\r\n`;\r\n\r\nconst Products = ({products, addToCart}) => {\r\n\r\n    const renderProducts = () => products.map(product => <Product key={product.id} product={product} addToCart={addToCart} />);\r\n\r\n    return (\r\n        <ProductsWrapper>\r\n            <Title>Products</Title>\r\n            <ListWrapper>\r\n                {renderProducts()}\r\n            </ListWrapper>\r\n        </ProductsWrapper>\r\n    )\r\n};\r\n\r\nProducts.propTypes = {\r\n    products: PropTypes.array,\r\n    addToCart: PropTypes.func,\r\n};\r\n\r\nexport default Products;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Cart from './components/Cart';\r\nimport Products from './components/Products';\r\nimport { addToCart, removeItem, addQuantity, subtractQuantity, inputQuantity } from './components/actions/cartActions';\r\n\r\nconst ContentWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-width: 768px;\r\n    margin: 50px auto 0;\r\n`;\r\n\r\nconst CartWrapper = styled.div`\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst ProductsWrapper = styled.div`\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst App = ({products, addedItems, total, addToCart, removeItem, addQuantity, subtractQuantity, inputQuantity }) => {\r\n  return (\r\n      <ContentWrapper>\r\n          <CartWrapper>\r\n              <Cart addedItems={addedItems} total={total} removeItem={removeItem} addQuantity={addQuantity} subtractQuantity={subtractQuantity} inputQuantity={inputQuantity}/>\r\n          </CartWrapper>\r\n          <ProductsWrapper>\r\n              <Products products={products} addToCart={addToCart} />\r\n          </ProductsWrapper>\r\n      </ContentWrapper>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        products: state.products,\r\n        addedItems: state.addedItems,\r\n        total: state.total\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    return {\r\n        addToCart: ( id ) => { dispatch(addToCart(id)) },\r\n        removeItem: ( id ) => { dispatch(removeItem(id)) },\r\n        addQuantity: ( id ) => { dispatch(addQuantity(id)) },\r\n        subtractQuantity: ( id ) => { dispatch(subtractQuantity(id)) },\r\n        inputQuantity: ( id, quantity ) => { dispatch(inputQuantity(id, quantity)) }\r\n    }\r\n};\r\n\r\nApp.propTypes = {\r\n    products: PropTypes.array,\r\n    addedItems: PropTypes.array,\r\n    total: PropTypes.number,\r\n    addToCart: PropTypes.func,\r\n    removeItem: PropTypes.func,\r\n    addQuantity: PropTypes.func,\r\n    subtractQuantity: PropTypes.func,\r\n    inputQuantity: PropTypes.func,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","import {\r\n    ADD_TO_CART,\r\n    REMOVE_ITEM,\r\n    ADD_QUANTITY,\r\n    INPUT_QUANTITY,\r\n    SUBTRACT_QUANTITY } from './actions-types/cart-actions';\r\n\r\nexport const addToCart = ( id ) => {\r\n    return {\r\n        type: ADD_TO_CART,\r\n        id\r\n    }\r\n};\r\n\r\nexport const removeItem = (id) => {\r\n    return {\r\n        type: REMOVE_ITEM,\r\n        id\r\n    }\r\n};\r\n\r\nexport const addQuantity = (id) => {\r\n    return {\r\n        type: ADD_QUANTITY,\r\n        id\r\n    }\r\n};\r\n\r\nexport const subtractQuantity = (id) => {\r\n    return {\r\n        type: SUBTRACT_QUANTITY,\r\n        id\r\n    }\r\n};\r\n\r\nexport const inputQuantity = (id, quantity) => {\r\n    return {\r\n        type: INPUT_QUANTITY,\r\n        quantity,\r\n        id\r\n    }\r\n};","export const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport const ADD_QUANTITY = 'ADD_QUANTITY';\r\nexport const SUBTRACT_QUANTITY = 'SUBTRACT_QUANTITY';\r\nexport const INPUT_QUANTITY = 'INPUT_QUANTITY';","import {\r\n    ADD_TO_CART,\r\n    REMOVE_ITEM,\r\n    ADD_QUANTITY,\r\n    INPUT_QUANTITY,\r\n    SUBTRACT_QUANTITY } from '../actions/actions-types/cart-actions';\r\n\r\nconst initState = {\r\n    products: [\r\n        { id:1, title:'Product Name', price:50, img: null },\r\n        { id:2, title:'Product Name', price:30, img: null },\r\n        { id:3, title:'Product Name', price:20, img: null },\r\n    ],\r\n    addedItems:[],\r\n    total: 0\r\n}\r\n\r\nconst cartReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TO_CART: {\r\n            const addedItem = state.products.find(item => item.id === action.id);\r\n            const isAlreadyAdded = state.addedItems.find(item => item.id === addedItem.id);\r\n            if( isAlreadyAdded ) {\r\n                addedItem.quantity += 1;\r\n                addedItem.totalPrice += addedItem.price;\r\n                const newTotalPrice = state.total + addedItem.price;\r\n                return {\r\n                    ...state,\r\n                    total: newTotalPrice\r\n                }\r\n            } else {\r\n                addedItem.quantity = 1;\r\n                addedItem.totalPrice = addedItem.price;\r\n                const newTotalPrice = state.total + addedItem.price;\r\n                return {\r\n                    ...state,\r\n                    addedItems: [...state.addedItems, addedItem],\r\n                    total: newTotalPrice\r\n                }\r\n            }\r\n        }\r\n\r\n        case REMOVE_ITEM: {\r\n            const itemToRemove = state.addedItems.find(item => item.id === action.id);\r\n            const newAddedItems = state.addedItems.filter(item => item.id !== action.id);\r\n            const newTotal = state.total - ( itemToRemove.price * itemToRemove.quantity );\r\n            return {\r\n                ...state,\r\n                 addedItems: newAddedItems,\r\n                 total: newTotal\r\n            }\r\n        }\r\n\r\n        case ADD_QUANTITY: {\r\n            const itemToUpdate = state.addedItems.find(item => item.id === action.id);\r\n            itemToUpdate.quantity += 1;\r\n            itemToUpdate.totalPrice += itemToUpdate.price;\r\n            const newTotal = state.total + itemToUpdate.price\r\n            return {\r\n                ...state,\r\n                total: newTotal\r\n            }\r\n        }\r\n\r\n        case INPUT_QUANTITY: {\r\n            const itemToUpdate = state.addedItems.find(item => item.id === action.id);\r\n            if (action.quantity <= 0) {\r\n                const newAddedItems = state.addedItems.filter(item => item.id !== action.id);\r\n                const newTotal = state.total - itemToUpdate.totalPrice\r\n                return {\r\n                    ...state,\r\n                    addedItems: newAddedItems,\r\n                    total: newTotal\r\n                }\r\n            } else {\r\n                let newTotal = state.total - itemToUpdate.totalPrice;\r\n                itemToUpdate.quantity = action.quantity;\r\n                itemToUpdate.totalPrice = itemToUpdate.quantity * itemToUpdate.price;\r\n                newTotal += itemToUpdate.totalPrice;\r\n                return {\r\n                    ...state,\r\n                    total: newTotal\r\n                }\r\n            }\r\n        }\r\n\r\n        case SUBTRACT_QUANTITY: {\r\n            const itemToUpdate = state.addedItems.find(item => item.id === action.id);\r\n            itemToUpdate.quantity -= 1;\r\n            itemToUpdate.totalPrice -= itemToUpdate.price;\r\n            const newTotal = state.total - itemToUpdate.price\r\n            if (itemToUpdate.quantity === 0) {\r\n                const newAddedItems = state.addedItems.filter(item => item.id !== action.id);\r\n                return {\r\n                    ...state,\r\n                    addedItems: newAddedItems,\r\n                    total: newTotal\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    total: newTotal\r\n                }\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default cartReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport cartReducer from './components/reducers/cartReducer';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nconst store = createStore(cartReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}